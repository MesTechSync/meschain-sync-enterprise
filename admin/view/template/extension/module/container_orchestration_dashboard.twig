{{ header }}{{ column_left }}
<div id="content">
    <div class="page-header">
        <div class="container-fluid">
            <div class="pull-right">
                <button type="button" id="deploy-container" class="btn btn-success">
                    <i class="fa fa-rocket"></i> {{ text_deploy_container }}
                </button>
                <button type="button" id="export-orchestration-report" class="btn btn-primary">
                    <i class="fa fa-download"></i> {{ text_export_report }}
                </button>
                <button type="button" id="refresh-orchestration-data" class="btn btn-info">
                    <i class="fa fa-refresh"></i> {{ text_refresh }}
                </button>
            </div>
            <h1>{{ heading_title }}</h1>
            <ul class="breadcrumb">
                {% for breadcrumb in breadcrumbs %}
                <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
                {% endfor %}
            </ul>
        </div>
    </div>

    <div class="container-fluid">
        <!-- Container Overview Cards -->
        <div class="row">
            <div class="col-lg-3 col-md-6">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-cubes fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge" id="total-containers">0</div>
                                <div>{{ text_total_containers }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                        <span class="pull-left" id="containers-status">{{ text_loading }}</span>
                        <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="panel panel-green">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-play fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge" id="running-containers">0</div>
                                <div>{{ text_running_containers }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                        <span class="pull-left" id="running-status">{{ text_healthy }}</span>
                        <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="panel panel-yellow">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-ship fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge" id="kubernetes-pods">0</div>
                                <div>{{ text_kubernetes_pods }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                        <span class="pull-left" id="k8s-status">{{ text_cluster_ready }}</span>
                        <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>

            <div class="col-lg-3 col-md-6">
                <div class="panel panel-red">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-3">
                                <i class="fa fa-exclamation-triangle fa-5x"></i>
                            </div>
                            <div class="col-xs-9 text-right">
                                <div class="huge" id="failed-containers">0</div>
                                <div>{{ text_failed_containers }}</div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                        <span class="pull-left" id="failed-status">{{ text_monitoring }}</span>
                        <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Container Performance Charts -->
        <div class="row">
            <div class="col-lg-8">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-line-chart fa-fw"></i> {{ text_container_performance }}
                    </div>
                    <div class="panel-body">
                        <canvas id="containerPerformanceChart" width="400" height="200"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-pie-chart fa-fw"></i> {{ text_resource_allocation }}
                    </div>
                    <div class="panel-body">
                        <canvas id="resourceAllocationChart" width="200" height="200"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Deployments Management -->
        <div class="row">
            <div class="col-lg-8">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-rocket fa-fw"></i> {{ text_active_deployments }}
                        <div class="pull-right">
                            <button type="button" class="btn btn-xs btn-success" id="create-deployment">
                                <i class="fa fa-plus"></i> {{ text_new_deployment }}
                            </button>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>{{ text_deployment_name }}</th>
                                        <th>{{ text_image }}</th>
                                        <th>{{ text_replicas }}</th>
                                        <th>{{ text_status }}</th>
                                        <th>{{ text_cpu_usage }}</th>
                                        <th>{{ text_memory_usage }}</th>
                                        <th>{{ text_actions }}</th>
                                    </tr>
                                </thead>
                                <tbody id="deployments-table">
                                    <tr>
                                        <td colspan="7" class="text-center">{{ text_loading }}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-expand fa-fw"></i> {{ text_scaling_operations }}
                    </div>
                    <div class="panel-body">
                        <div class="form-group">
                            <label>{{ text_select_deployment }}</label>
                            <select class="form-control" id="scaling-deployment">
                                <option value="">{{ text_select_deployment }}</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>{{ text_replica_count }}</label>
                            <input type="number" class="form-control" id="scaling-replicas" min="1" max="20" value="3">
                        </div>
                        <div class="form-group">
                            <label>{{ text_scaling_strategy }}</label>
                            <select class="form-control" id="scaling-strategy">
                                <option value="rolling_update">{{ text_rolling_update }}</option>
                                <option value="blue_green">{{ text_blue_green }}</option>
                                <option value="canary">{{ text_canary }}</option>
                                <option value="recreate">{{ text_recreate }}</option>
                            </select>
                        </div>
                        <button type="button" class="btn btn-warning btn-block" id="execute-scaling">
                            <i class="fa fa-expand"></i> {{ text_execute_scaling }}
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Kubernetes Cluster Status -->
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-ship fa-fw"></i> {{ text_kubernetes_cluster_status }}
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-2">
                                <div class="description-block border-right">
                                    <span class="description-percentage text-green" id="cluster-nodes-ready">0</span>
                                    <h5 class="description-header">{{ text_nodes_ready }}</h5>
                                    <span class="description-text">{{ text_out_of }} <span id="cluster-nodes-total">0</span></span>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="description-block border-right">
                                    <span class="description-percentage text-blue" id="cluster-cpu-usage">0%</span>
                                    <h5 class="description-header">{{ text_cpu_usage }}</h5>
                                    <span class="description-text">{{ text_cluster_wide }}</span>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="description-block border-right">
                                    <span class="description-percentage text-yellow" id="cluster-memory-usage">0%</span>
                                    <h5 class="description-header">{{ text_memory_usage }}</h5>
                                    <span class="description-text">{{ text_cluster_wide }}</span>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="description-block border-right">
                                    <span class="description-percentage text-purple" id="cluster-pods-running">0</span>
                                    <h5 class="description-header">{{ text_pods_running }}</h5>
                                    <span class="description-text">{{ text_active_pods }}</span>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="description-block border-right">
                                    <span class="description-percentage text-orange" id="cluster-services">0</span>
                                    <h5 class="description-header">{{ text_services }}</h5>
                                    <span class="description-text">{{ text_exposed_services }}</span>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="description-block">
                                    <span class="description-percentage text-red" id="cluster-health-score">0%</span>
                                    <h5 class="description-header">{{ text_health_score }}</h5>
                                    <span class="description-text">{{ text_overall_health }}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Container Logs and Monitoring -->
        <div class="row">
            <div class="col-lg-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-file-text fa-fw"></i> {{ text_container_logs }}
                        <div class="pull-right">
                            <select class="form-control input-sm" id="log-deployment-select" style="width: 200px; display: inline-block;">
                                <option value="">{{ text_select_deployment }}</option>
                            </select>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div id="container-logs" style="height: 300px; overflow-y: auto; background: #000; color: #00ff00; font-family: monospace; padding: 10px;">
                            <div class="text-center" style="color: #fff;">{{ text_select_deployment_for_logs }}</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-heartbeat fa-fw"></i> {{ text_health_checks }}
                    </div>
                    <div class="panel-body">
                        <div id="health-checks-list">
                            <div class="text-center">{{ text_loading_health_checks }}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Auto-scaling Configuration -->
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <i class="fa fa-magic fa-fw"></i> {{ text_autoscaling_configuration }}
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label>{{ text_deployment }}</label>
                                    <select class="form-control" id="autoscaling-deployment">
                                        <option value="">{{ text_select_deployment }}</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label>{{ text_min_replicas }}</label>
                                    <input type="number" class="form-control" id="autoscaling-min" min="1" max="10" value="2">
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label>{{ text_max_replicas }}</label>
                                    <input type="number" class="form-control" id="autoscaling-max" min="2" max="50" value="10">
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label>{{ text_cpu_threshold }}%</label>
                                    <input type="number" class="form-control" id="autoscaling-cpu" min="10" max="100" value="70">
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="form-group">
                                    <label>{{ text_memory_threshold }}%</label>
                                    <input type="number" class="form-control" id="autoscaling-memory" min="10" max="100" value="80">
                                </div>
                            </div>
                            <div class="col-lg-1">
                                <div class="form-group">
                                    <label>&nbsp;</label>
                                    <button type="button" class="btn btn-success btn-block" id="configure-autoscaling">
                                        <i class="fa fa-magic"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Events -->
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <i class="fa fa-history fa-fw"></i> {{ text_recent_events }}
                    </div>
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>{{ text_timestamp }}</th>
                                        <th>{{ text_event_type }}</th>
                                        <th>{{ text_deployment }}</th>
                                        <th>{{ text_description }}</th>
                                        <th>{{ text_status }}</th>
                                    </tr>
                                </thead>
                                <tbody id="events-table">
                                    <tr>
                                        <td colspan="5" class="text-center">{{ text_loading }}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Deployment Modal -->
<div class="modal fade" id="deploymentModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">{{ text_deploy_new_container }}</h4>
            </div>
            <div class="modal-body">
                <form id="deployment-form">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>{{ text_deployment_name }}</label>
                                <input type="text" class="form-control" id="deploy-name" required>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>{{ text_container_image }}</label>
                                <input type="text" class="form-control" id="deploy-image" placeholder="nginx:latest" required>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>{{ text_replicas }}</label>
                                <input type="number" class="form-control" id="deploy-replicas" min="1" max="20" value="3">
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>{{ text_cpu_request }}</label>
                                <input type="text" class="form-control" id="deploy-cpu-request" value="100m">
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>{{ text_memory_request }}</label>
                                <input type="text" class="form-control" id="deploy-memory-request" value="128Mi">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>{{ text_cpu_limit }}</label>
                                <input type="text" class="form-control" id="deploy-cpu-limit" value="500m">
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>{{ text_memory_limit }}</label>
                                <input type="text" class="form-control" id="deploy-memory-limit" value="512Mi">
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>{{ text_container_port }}</label>
                                <input type="number" class="form-control" id="deploy-port" value="80">
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>{{ text_environment_variables }}</label>
                        <textarea class="form-control" id="deploy-env" rows="3" placeholder="KEY1=value1&#10;KEY2=value2"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">{{ text_cancel }}</button>
                <button type="button" class="btn btn-success" id="execute-deployment">{{ text_deploy }}</button>
            </div>
        </div>
    </div>
</div>

<style>
.panel-green {
    border-color: #5cb85c;
}
.panel-green > .panel-heading {
    border-color: #5cb85c;
    color: white;
    background-color: #5cb85c;
}

.panel-yellow {
    border-color: #f0ad4e;
}
.panel-yellow > .panel-heading {
    border-color: #f0ad4e;
    color: white;
    background-color: #f0ad4e;
}

.panel-red {
    border-color: #d9534f;
}
.panel-red > .panel-heading {
    border-color: #d9534f;
    color: white;
    background-color: #d9534f;
}

.huge {
    font-size: 40px;
}

.description-block {
    text-align: center;
    padding: 15px;
}

.description-percentage {
    font-size: 2em;
    font-weight: bold;
}

.description-header {
    margin: 10px 0 5px 0;
    font-size: 16px;
}

.description-text {
    color: #999;
    font-size: 12px;
}

.border-right {
    border-right: 1px solid #f0f0f0;
}

.text-green { color: #5cb85c !important; }
.text-blue { color: #337ab7 !important; }
.text-yellow { color: #f0ad4e !important; }
.text-red { color: #d9534f !important; }
.text-purple { color: #9b59b6 !important; }
.text-orange { color: #e67e22 !important; }

.status-badge {
    padding: 2px 8px;
    border-radius: 3px;
    font-size: 11px;
    font-weight: bold;
}

.status-running { background-color: #5cb85c; color: white; }
.status-pending { background-color: #f0ad4e; color: white; }
.status-failed { background-color: #d9534f; color: white; }
.status-stopped { background-color: #6c757d; color: white; }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
$(document).ready(function() {
    let performanceChart, allocationChart;
    
    // Initialize Charts
    function initializeCharts() {
        // Container Performance Chart
        const performanceCtx = document.getElementById('containerPerformanceChart').getContext('2d');
        performanceChart = new Chart(performanceCtx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: '{{ text_cpu_usage }}',
                    data: [],
                    borderColor: 'rgb(75, 192, 192)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    tension: 0.1
                }, {
                    label: '{{ text_memory_usage }}',
                    data: [],
                    borderColor: 'rgb(255, 99, 132)',
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    tension: 0.1
                }, {
                    label: '{{ text_network_io }}',
                    data: [],
                    borderColor: 'rgb(54, 162, 235)',
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 100
                    }
                }
            }
        });

        // Resource Allocation Chart
        const allocationCtx = document.getElementById('resourceAllocationChart').getContext('2d');
        allocationChart = new Chart(allocationCtx, {
            type: 'doughnut',
            data: {
                labels: ['{{ text_api_containers }}', '{{ text_worker_containers }}', '{{ text_database_containers }}', '{{ text_cache_containers }}'],
                datasets: [{
                    data: [40, 30, 20, 10],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.8)',
                        'rgba(54, 162, 235, 0.8)',
                        'rgba(255, 205, 86, 0.8)',
                        'rgba(75, 192, 192, 0.8)'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });
    }

    // Load Orchestration Data
    function loadOrchestrationData() {
        $.ajax({
            url: 'index.php?route=extension/module/container_orchestration_dashboard/getOrchestrationMetrics&user_token={{ user_token }}',
            type: 'GET',
            dataType: 'json',
            success: function(data) {
                updateDashboard(data);
            },
            error: function() {
                console.error('Failed to load orchestration data');
            }
        });
    }

    // Update Dashboard
    function updateDashboard(data) {
        // Update overview cards
        $('#total-containers').text(data.overview.total_containers || 0);
        $('#running-containers').text(data.overview.running_containers || 0);
        $('#kubernetes-pods').text(data.overview.kubernetes_pods || 0);
        $('#failed-containers').text(data.overview.failed_containers || 0);

        // Update status messages
        $('#containers-status').text(data.overview.containers_status || '{{ text_loading }}');
        $('#running-status').text(data.overview.running_status || '{{ text_healthy }}');
        $('#k8s-status').text(data.overview.k8s_status || '{{ text_cluster_ready }}');
        $('#failed-status').text(data.overview.failed_status || '{{ text_monitoring }}');

        // Update cluster metrics
        $('#cluster-nodes-ready').text(data.cluster.nodes_ready || 0);
        $('#cluster-nodes-total').text(data.cluster.nodes_total || 0);
        $('#cluster-cpu-usage').text((data.cluster.cpu_usage || 0) + '%');
        $('#cluster-memory-usage').text((data.cluster.memory_usage || 0) + '%');
        $('#cluster-pods-running').text(data.cluster.pods_running || 0);
        $('#cluster-services').text(data.cluster.services || 0);
        $('#cluster-health-score').text((data.cluster.health_score || 0) + '%');

        // Update deployments table
        updateDeploymentsTable(data.deployments || []);

        // Update charts
        updateCharts(data.metrics || {});

        // Update health checks
        updateHealthChecks(data.health_checks || []);

        // Update events
        updateEventsTable(data.events || []);

        // Update deployment selects
        updateDeploymentSelects(data.deployments || []);
    }

    // Update Deployments Table
    function updateDeploymentsTable(deployments) {
        let html = '';
        if (deployments.length === 0) {
            html = '<tr><td colspan="7" class="text-center">{{ text_no_deployments }}</td></tr>';
        } else {
            deployments.forEach(function(deployment) {
                const statusClass = getStatusClass(deployment.status);
                html += `
                    <tr>
                        <td><strong>${deployment.name}</strong></td>
                        <td><code>${deployment.image}</code></td>
                        <td><span class="badge">${deployment.replicas}</span></td>
                        <td><span class="status-badge status-${deployment.status}">${deployment.status}</span></td>
                        <td>${deployment.cpu_usage || 0}%</td>
                        <td>${deployment.memory_usage || 0}%</td>
                        <td>
                            <div class="btn-group btn-group-xs">
                                <button class="btn btn-info" onclick="viewLogs('${deployment.name}')">
                                    <i class="fa fa-file-text"></i>
                                </button>
                                <button class="btn btn-warning" onclick="scaleDeployment('${deployment.name}')">
                                    <i class="fa fa-expand"></i>
                                </button>
                                <button class="btn btn-danger" onclick="deleteDeployment('${deployment.name}')">
                                    <i class="fa fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            });
        }
        $('#deployments-table').html(html);
    }

    // Update Charts
    function updateCharts(metrics) {
        if (metrics.timeline) {
            performanceChart.data.labels = metrics.timeline;
            performanceChart.data.datasets[0].data = metrics.cpu_usage || [];
            performanceChart.data.datasets[1].data = metrics.memory_usage || [];
            performanceChart.data.datasets[2].data = metrics.network_io || [];
            performanceChart.update();
        }

        if (metrics.allocation) {
            allocationChart.data.datasets[0].data = metrics.allocation;
            allocationChart.update();
        }
    }

    // Update Health Checks
    function updateHealthChecks(healthChecks) {
        let html = '';
        if (healthChecks.length === 0) {
            html = '<div class="text-center">{{ text_no_health_checks }}</div>';
        } else {
            healthChecks.forEach(function(check) {
                const statusIcon = check.status === 'healthy' ? 'check-circle text-success' : 'times-circle text-danger';
                html += `
                    <div class="health-check-item" style="margin-bottom: 10px; padding: 10px; border: 1px solid #ddd; border-radius: 4px;">
                        <div class="row">
                            <div class="col-xs-8">
                                <strong>${check.deployment}</strong><br>
                                <small>${check.endpoint}</small>
                            </div>
                            <div class="col-xs-4 text-right">
                                <i class="fa fa-${statusIcon} fa-2x"></i><br>
                                <small>${check.response_time}ms</small>
                            </div>
                        </div>
                    </div>
                `;
            });
        }
        $('#health-checks-list').html(html);
    }

    // Update Events Table
    function updateEventsTable(events) {
        let html = '';
        if (events.length === 0) {
            html = '<tr><td colspan="5" class="text-center">{{ text_no_events }}</td></tr>';
        } else {
            events.forEach(function(event) {
                const statusClass = getStatusClass(event.status);
                html += `
                    <tr>
                        <td>${event.timestamp}</td>
                        <td><span class="label label-info">${event.type}</span></td>
                        <td>${event.deployment}</td>
                        <td>${event.description}</td>
                        <td><span class="status-badge status-${event.status}">${event.status}</span></td>
                    </tr>
                `;
            });
        }
        $('#events-table').html(html);
    }

    // Update Deployment Selects
    function updateDeploymentSelects(deployments) {
        let options = '<option value="">{{ text_select_deployment }}</option>';
        deployments.forEach(function(deployment) {
            options += `<option value="${deployment.name}">${deployment.name}</option>`;
        });
        
        $('#scaling-deployment, #autoscaling-deployment, #log-deployment-select').html(options);
    }

    // Get Status Class
    function getStatusClass(status) {
        switch(status) {
            case 'running': return 'success';
            case 'pending': return 'warning';
            case 'failed': return 'danger';
            case 'stopped': return 'default';
            default: return 'info';
        }
    }

    // Event Handlers
    $('#refresh-orchestration-data').click(function() {
        loadOrchestrationData();
    });

    $('#export-orchestration-report').click(function() {
        window.location.href = 'index.php?route=extension/module/container_orchestration_dashboard/exportReport&user_token={{ user_token }}';
    });

    $('#deploy-container, #create-deployment').click(function() {
        $('#deploymentModal').modal('show');
    });

    $('#execute-deployment').click(function() {
        executeDeployment();
    });

    $('#execute-scaling').click(function() {
        executeScaling();
    });

    $('#configure-autoscaling').click(function() {
        configureAutoscaling();
    });

    $('#log-deployment-select').change(function() {
        const deployment = $(this).val();
        if (deployment) {
            loadContainerLogs(deployment);
        }
    });

    // Functions
    function executeDeployment() {
        const deploymentData = {
            name: $('#deploy-name').val(),
            image: $('#deploy-image').val(),
            replicas: $('#deploy-replicas').val(),
            resources: {
                requests: {
                    cpu: $('#deploy-cpu-request').val(),
                    memory: $('#deploy-memory-request').val()
                },
                limits: {
                    cpu: $('#deploy-cpu-limit').val(),
                    memory: $('#deploy-memory-limit').val()
                }
            },
            ports: [{ containerPort: $('#deploy-port').val() }],
            env: parseEnvironmentVariables($('#deploy-env').val())
        };

        $.ajax({
            url: 'index.php?route=extension/module/container_orchestration_dashboard/deployContainer&user_token={{ user_token }}',
            type: 'POST',
            data: deploymentData,
            dataType: 'json',
            success: function(response) {
                if (response.status === 'success') {
                    alert('{{ text_deployment_successful }}');
                    $('#deploymentModal').modal('hide');
                    loadOrchestrationData();
                } else {
                    alert('{{ text_deployment_failed }}: ' + response.error);
                }
            },
            error: function() {
                alert('{{ text_deployment_error }}');
            }
        });
    }

    function executeScaling() {
        const scalingData = {
            deployment: $('#scaling-deployment').val(),
            replicas: $('#scaling-replicas').val(),
            strategy: $('#scaling-strategy').val()
        };

        if (!scalingData.deployment) {
            alert('{{ text_select_deployment_first }}');
            return;
        }

        $.ajax({
            url: 'index.php?route=extension/module/container_orchestration_dashboard/scaleContainer&user_token={{ user_token }}',
            type: 'POST',
            data: scalingData,
            dataType: 'json',
            success: function(response) {
                if (response.status === 'success') {
                    alert('{{ text_scaling_successful }}');
                    loadOrchestrationData();
                } else {
                    alert('{{ text_scaling_failed }}: ' + response.error);
                }
            },
            error: function() {
                alert('{{ text_scaling_error }}');
            }
        });
    }

    function configureAutoscaling() {
        const autoscalingData = {
            deployment: $('#autoscaling-deployment').val(),
            min_replicas: $('#autoscaling-min').val(),
            max_replicas: $('#autoscaling-max').val(),
            cpu_threshold: $('#autoscaling-cpu').val(),
            memory_threshold: $('#autoscaling-memory').val()
        };

        if (!autoscalingData.deployment) {
            alert('{{ text_select_deployment_first }}');
            return;
        }

        $.ajax({
            url: 'index.php?route=extension/module/container_orchestration_dashboard/configureAutoscaling&user_token={{ user_token }}',
            type: 'POST',
            data: autoscalingData,
            dataType: 'json',
            success: function(response) {
                if (response.status === 'success') {
                    alert('{{ text_autoscaling_configured }}');
                } else {
                    alert('{{ text_autoscaling_failed }}: ' + response.error);
                }
            },
            error: function() {
                alert('{{ text_autoscaling_error }}');
            }
        });
    }

    function loadContainerLogs(deployment) {
        $.ajax({
            url: 'index.php?route=extension/module/container_orchestration_dashboard/getContainerLogs&user_token={{ user_token }}',
            type: 'GET',
            data: { deployment: deployment },
            dataType: 'json',
            success: function(response) {
                let logsHtml = '';
                if (response.logs) {
                    Object.keys(response.logs).forEach(function(pod) {
                        logsHtml += `<div style="color: #00ff00;"><strong>[${pod}]</strong></div>`;
                        response.logs[pod].forEach(function(line) {
                            logsHtml += `<div>${line}</div>`;
                        });
                        logsHtml += '<br>';
                    });
                } else {
                    logsHtml = '<div style="color: #fff;">{{ text_no_logs_available }}</div>';
                }
                $('#container-logs').html(logsHtml);
                $('#container-logs').scrollTop($('#container-logs')[0].scrollHeight);
            },
            error: function() {
                $('#container-logs').html('<div style="color: #ff0000;">{{ text_error_loading_logs }}</div>');
            }
        });
    }

    function parseEnvironmentVariables(envText) {
        const env = [];
        if (envText.trim()) {
            envText.split('\n').forEach(function(line) {
                const parts = line.split('=');
                if (parts.length === 2) {
                    env.push({
                        name: parts[0].trim(),
                        value: parts[1].trim()
                    });
                }
            });
        }
        return env;
    }

    // Global functions for table actions
    window.viewLogs = function(deployment) {
        $('#log-deployment-select').val(deployment).trigger('change');
    };

    window.scaleDeployment = function(deployment) {
        $('#scaling-deployment').val(deployment);
    };

    window.deleteDeployment = function(deployment) {
        if (confirm('{{ text_confirm_delete_deployment }}')) {
            $.ajax({
                url: 'index.php?route=extension/module/container_orchestration_dashboard/deleteDeployment&user_token={{ user_token }}',
                type: 'POST',
                data: { deployment: deployment },
                dataType: 'json',
                success: function(response) {
                    if (response.status === 'success') {
                        alert('{{ text_deployment_deleted }}');
                        loadOrchestrationData();
                    } else {
                        alert('{{ text_delete_failed }}: ' + response.error);
                    }
                },
                error: function() {
                    alert('{{ text_delete_error }}');
                }
            });
        }
    };

    // Initialize
    initializeCharts();
    loadOrchestrationData();
    
    // Auto-refresh every 15 seconds
    setInterval(loadOrchestrationData, 15000);
});
</script>

{{ footer }} 