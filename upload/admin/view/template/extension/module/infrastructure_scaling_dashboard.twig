{{ header }}{{ column_left }}
<div id="content">
  <div class="page-header">
    <div class="container-fluid">
      <div class="pull-right">
        <button type="button" class="btn btn-success" onclick="exportInfrastructureReport()">
          <i class="fa fa-download"></i> {{ text_export_report }}
        </button>
        <button type="button" class="btn btn-primary" onclick="runScalingSimulation()">
          <i class="fa fa-play"></i> {{ text_run_simulation }}
        </button>
      </div>
      <h1>{{ heading_title }}</h1>
      <ul class="breadcrumb">
        <li><a href="{{ home }}">{{ text_home }}</a></li>
        <li><a href="{{ extension }}">{{ text_extension }}</a></li>
        <li>{{ heading_title }}</li>
      </ul>
    </div>
  </div>

  <div class="container-fluid">
    <!-- Infrastructure Health Overview -->
    <div class="row">
      <div class="col-lg-3 col-md-6">
        <div class="panel panel-primary">
          <div class="panel-heading">
            <div class="row">
              <div class="col-xs-3">
                <i class="fa fa-server fa-5x"></i>
              </div>
              <div class="col-xs-9 text-right">
                <div class="huge" id="infrastructure-score">98.5%</div>
                <div>{{ text_infrastructure_health }}</div>
              </div>
            </div>
          </div>
          <div class="panel-footer">
            <div class="progress">
              <div class="progress-bar progress-bar-success" role="progressbar" id="health-bar" style="width: 98.5%"></div>
            </div>
          </div>
        </div>
      </div>

      <div class="col-lg-3 col-md-6">
        <div class="panel panel-success">
          <div class="panel-heading">
            <div class="row">
              <div class="col-xs-3">
                <i class="fa fa-expand fa-5x"></i>
              </div>
              <div class="col-xs-9 text-right">
                <div class="huge" id="scaling-efficiency">92.3%</div>
                <div>{{ text_scaling_efficiency }}</div>
              </div>
            </div>
          </div>
          <div class="panel-footer">
            <span class="pull-left">{{ text_auto_scaling_active }}</span>
            <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
            <div class="clearfix"></div>
          </div>
        </div>
      </div>

      <div class="col-lg-3 col-md-6">
        <div class="panel panel-warning">
          <div class="panel-heading">
            <div class="row">
              <div class="col-xs-3">
                <i class="fa fa-balance-scale fa-5x"></i>
              </div>
              <div class="col-xs-9 text-right">
                <div class="huge" id="load-balance">87%</div>
                <div>{{ text_load_balance }}</div>
              </div>
            </div>
          </div>
          <div class="panel-footer">
            <span class="pull-left">{{ text_load_distributed }}</span>
            <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
            <div class="clearfix"></div>
          </div>
        </div>
      </div>

      <div class="col-lg-3 col-md-6">
        <div class="panel panel-info">
          <div class="panel-heading">
            <div class="row">
              <div class="col-xs-3">
                <i class="fa fa-cloud fa-5x"></i>
              </div>
              <div class="col-xs-9 text-right">
                <div class="huge" id="cloud-readiness">95%</div>
                <div>{{ text_cloud_readiness }}</div>
              </div>
            </div>
          </div>
          <div class="panel-footer">
            <span class="pull-left">{{ text_microservices_ready }}</span>
            <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
            <div class="clearfix"></div>
          </div>
        </div>
      </div>
    </div>

    <!-- Real-time Scaling Charts -->
    <div class="row">
      <div class="col-lg-6">
        <div class="panel panel-default">
          <div class="panel-heading">
            <i class="fa fa-line-chart fa-fw"></i> {{ text_resource_utilization }}
            <div class="pull-right">
              <div class="btn-group">
                <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown">
                  {{ text_actions }}
                  <span class="caret"></span>
                </button>
                <ul class="dropdown-menu pull-right" role="menu">
                  <li><a href="#" onclick="refreshResourceChart()">{{ text_refresh }}</a></li>
                  <li><a href="#" onclick="exportResourceData()">{{ text_export }}</a></li>
                  <li class="divider"></li>
                  <li><a href="#" onclick="configureAlerts()">{{ text_configure_alerts }}</a></li>
                </ul>
              </div>
            </div>
          </div>
          <div class="panel-body">
            <canvas id="resourceChart" height="300"></canvas>
          </div>
        </div>
      </div>

      <div class="col-lg-6">
        <div class="panel panel-default">
          <div class="panel-heading">
            <i class="fa fa-bar-chart-o fa-fw"></i> {{ text_scaling_prediction }}
          </div>
          <div class="panel-body">
            <canvas id="scalingPredictionChart" height="300"></canvas>
          </div>
        </div>
      </div>
    </div>

    <!-- Infrastructure Components Status -->
    <div class="row">
      <div class="col-lg-12">
        <div class="panel panel-default">
          <div class="panel-heading">
            <i class="fa fa-sitemap fa-fw"></i> {{ text_infrastructure_components }}
            <div class="pull-right">
              <button type="button" class="btn btn-xs btn-primary" onclick="refreshComponents()">
                <i class="fa fa-refresh"></i> {{ text_refresh }}
              </button>
            </div>
          </div>
          <div class="panel-body">
            <div class="row">
              <!-- Load Balancers -->
              <div class="col-lg-4">
                <h4>{{ text_load_balancers }}</h4>
                <div class="list-group" id="load-balancer-list">
                  <div class="list-group-item">
                    <span class="badge badge-success">{{ text_active }}</span>
                    <i class="fa fa-balance-scale"></i> Main Load Balancer
                    <div class="small text-muted">CPU: 45% | Memory: 62%</div>
                  </div>
                  <div class="list-group-item">
                    <span class="badge badge-success">{{ text_active }}</span>
                    <i class="fa fa-balance-scale"></i> Secondary LB
                    <div class="small text-muted">CPU: 38% | Memory: 55%</div>
                  </div>
                </div>
              </div>

              <!-- Database Clusters -->
              <div class="col-lg-4">
                <h4>{{ text_database_clusters }}</h4>
                <div class="list-group" id="database-cluster-list">
                  <div class="list-group-item">
                    <span class="badge badge-success">{{ text_master }}</span>
                    <i class="fa fa-database"></i> MySQL Master
                    <div class="small text-muted">Connections: 156/200</div>
                  </div>
                  <div class="list-group-item">
                    <span class="badge badge-info">{{ text_slave }}</span>
                    <i class="fa fa-database"></i> MySQL Slave-1
                    <div class="small text-muted">Lag: 0.2s</div>
                  </div>
                  <div class="list-group-item">
                    <span class="badge badge-info">{{ text_slave }}</span>
                    <i class="fa fa-database"></i> MySQL Slave-2
                    <div class="small text-muted">Lag: 0.1s</div>
                  </div>
                </div>
              </div>

              <!-- Microservices -->
              <div class="col-lg-4">
                <h4>{{ text_microservices }}</h4>
                <div class="list-group" id="microservices-list">
                  <div class="list-group-item">
                    <span class="badge badge-success">3/3</span>
                    <i class="fa fa-cube"></i> User Service
                    <div class="small text-muted">Response: 45ms</div>
                  </div>
                  <div class="list-group-item">
                    <span class="badge badge-success">5/5</span>
                    <i class="fa fa-cube"></i> Product Service
                    <div class="small text-muted">Response: 67ms</div>
                  </div>
                  <div class="list-group-item">
                    <span class="badge badge-warning">2/3</span>
                    <i class="fa fa-cube"></i> Order Service
                    <div class="small text-muted">Response: 123ms</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Auto-scaling Configuration -->
    <div class="row">
      <div class="col-lg-6">
        <div class="panel panel-default">
          <div class="panel-heading">
            <i class="fa fa-cogs fa-fw"></i> {{ text_autoscaling_config }}
          </div>
          <div class="panel-body">
            <div class="form-group">
              <label>{{ text_cpu_threshold }}</label>
              <div class="input-group">
                <input type="number" class="form-control" id="cpu-threshold" value="75" min="1" max="100">
                <span class="input-group-addon">%</span>
              </div>
            </div>
            <div class="form-group">
              <label>{{ text_memory_threshold }}</label>
              <div class="input-group">
                <input type="number" class="form-control" id="memory-threshold" value="80" min="1" max="100">
                <span class="input-group-addon">%</span>
              </div>
            </div>
            <div class="form-group">
              <label>{{ text_scale_out_instances }}</label>
              <input type="number" class="form-control" id="scale-out-instances" value="2" min="1" max="10">
            </div>
            <div class="form-group">
              <label>{{ text_cooldown_period }}</label>
              <div class="input-group">
                <input type="number" class="form-control" id="cooldown-period" value="300" min="60" max="3600">
                <span class="input-group-addon">{{ text_seconds }}</span>
              </div>
            </div>
            <button type="button" class="btn btn-primary" onclick="updateAutoscalingConfig()">
              {{ text_update_config }}
            </button>
          </div>
        </div>
      </div>

      <div class="col-lg-6">
        <div class="panel panel-default">
          <div class="panel-heading">
            <i class="fa fa-bell fa-fw"></i> {{ text_scaling_alerts }}
          </div>
          <div class="panel-body">
            <div class="list-group" id="scaling-alerts">
              <div class="list-group-item list-group-item-success">
                <strong>{{ text_scaling_success }}</strong>
                <p class="small">{{ text_scaled_up_message }}</p>
                <small class="text-muted">2 {{ text_minutes_ago }}</small>
              </div>
              <div class="list-group-item list-group-item-info">
                <strong>{{ text_threshold_warning }}</strong>
                <p class="small">{{ text_cpu_high_message }}</p>
                <small class="text-muted">5 {{ text_minutes_ago }}</small>
              </div>
              <div class="list-group-item list-group-item-warning">
                <strong>{{ text_predictive_alert }}</strong>
                <p class="small">{{ text_traffic_spike_prediction }}</p>
                <small class="text-muted">8 {{ text_minutes_ago }}</small>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Kubernetes Dashboard Integration -->
    <div class="row">
      <div class="col-lg-12">
        <div class="panel panel-default">
          <div class="panel-heading">
            <i class="fa fa-ship fa-fw"></i> Kubernetes Cluster Status
            <div class="pull-right">
              <button type="button" class="btn btn-xs btn-info" onclick="openKubernetesDashboard()">
                <i class="fa fa-external-link"></i> {{ text_open_k8s_dashboard }}
              </button>
            </div>
          </div>
          <div class="panel-body">
            <div class="row">
              <div class="col-md-3">
                <div class="text-center">
                  <h3 class="text-success" id="k8s-nodes">12</h3>
                  <p>{{ text_active_nodes }}</p>
                </div>
              </div>
              <div class="col-md-3">
                <div class="text-center">
                  <h3 class="text-info" id="k8s-pods">47</h3>
                  <p>{{ text_running_pods }}</p>
                </div>
              </div>
              <div class="col-md-3">
                <div class="text-center">
                  <h3 class="text-warning" id="k8s-services">15</h3>
                  <p>{{ text_active_services }}</p>
                </div>
              </div>
              <div class="col-md-3">
                <div class="text-center">
                  <h3 class="text-primary" id="k8s-deployments">8</h3>
                  <p>{{ text_deployments }}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Infrastructure Scaling JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
// Real-time data update interval
let updateInterval;
let resourceChart, scalingChart;

// Initialize dashboard
$(document).ready(function() {
    initializeCharts();
    startRealTimeUpdates();
    loadInitialData();
});

// Initialize Chart.js charts
function initializeCharts() {
    // Resource Utilization Chart
    const resourceCtx = document.getElementById('resourceChart').getContext('2d');
    resourceChart = new Chart(resourceCtx, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'CPU %',
                data: [],
                borderColor: 'rgb(255, 99, 132)',
                backgroundColor: 'rgba(255, 99, 132, 0.1)',
                tension: 0.1
            }, {
                label: 'Memory %',
                data: [],
                borderColor: 'rgb(54, 162, 235)',
                backgroundColor: 'rgba(54, 162, 235, 0.1)',
                tension: 0.1
            }, {
                label: 'Network I/O',
                data: [],
                borderColor: 'rgb(255, 205, 86)',
                backgroundColor: 'rgba(255, 205, 86, 0.1)',
                tension: 0.1
            }]
        },
        options: {
            responsive: true,
            interaction: {
                mode: 'index',
                intersect: false,
            },
            scales: {
                y: {
                    beginAtZero: true,
                    max: 100
                }
            },
            plugins: {
                legend: {
                    position: 'top',
                }
            }
        }
    });

    // Scaling Prediction Chart
    const scalingCtx = document.getElementById('scalingPredictionChart').getContext('2d');
    scalingChart = new Chart(scalingCtx, {
        type: 'bar',
        data: {
            labels: ['Current', '1h Pred', '6h Pred', '24h Pred'],
            datasets: [{
                label: 'Instance Count',
                data: [8, 12, 15, 10],
                backgroundColor: [
                    'rgba(75, 192, 192, 0.8)',
                    'rgba(255, 206, 86, 0.8)',
                    'rgba(255, 99, 132, 0.8)',
                    'rgba(54, 162, 235, 0.8)'
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}

// Start real-time updates
function startRealTimeUpdates() {
    updateInterval = setInterval(function() {
        updateMetrics();
        updateCharts();
        updateComponentStatus();
    }, 5000); // Update every 5 seconds
}

// Update real-time metrics
function updateMetrics() {
    $.ajax({
        url: 'index.php?route=extension/module/infrastructure_scaling_monitor/getMetrics',
        type: 'POST',
        dataType: 'json',
        success: function(data) {
            if (data.success) {
                // Update main metrics
                $('#infrastructure-score').text(data.infrastructure_health + '%');
                $('#scaling-efficiency').text(data.scaling_efficiency + '%');
                $('#load-balance').text(data.load_balance + '%');
                $('#cloud-readiness').text(data.cloud_readiness + '%');
                
                // Update progress bars
                $('#health-bar').css('width', data.infrastructure_health + '%');
                
                // Update Kubernetes stats
                $('#k8s-nodes').text(data.k8s_nodes);
                $('#k8s-pods').text(data.k8s_pods);
                $('#k8s-services').text(data.k8s_services);
                $('#k8s-deployments').text(data.k8s_deployments);
            }
        }
    });
}

// Update charts with real-time data
function updateCharts() {
    $.ajax({
        url: 'index.php?route=extension/module/infrastructure_scaling_monitor/getChartData',
        type: 'POST',
        dataType: 'json',
        success: function(data) {
            if (data.success) {
                // Update resource chart
                const now = new Date().toLocaleTimeString();
                resourceChart.data.labels.push(now);
                resourceChart.data.datasets[0].data.push(data.cpu_usage);
                resourceChart.data.datasets[1].data.push(data.memory_usage);
                resourceChart.data.datasets[2].data.push(data.network_io);
                
                // Keep only last 20 data points
                if (resourceChart.data.labels.length > 20) {
                    resourceChart.data.labels.shift();
                    resourceChart.data.datasets.forEach(dataset => dataset.data.shift());
                }
                
                resourceChart.update('none');
                
                // Update scaling prediction
                scalingChart.data.datasets[0].data = data.scaling_prediction;
                scalingChart.update('none');
            }
        }
    });
}

// Update component status
function updateComponentStatus() {
    $.ajax({
        url: 'index.php?route=extension/module/infrastructure_scaling_monitor/getComponentStatus',
        type: 'POST',
        dataType: 'json',
        success: function(data) {
            if (data.success) {
                updateComponentList('#load-balancer-list', data.load_balancers);
                updateComponentList('#database-cluster-list', data.databases);
                updateComponentList('#microservices-list', data.microservices);
                updateAlertsList(data.alerts);
            }
        }
    });
}

// Update component list
function updateComponentList(selector, components) {
    const container = $(selector);
    container.empty();
    
    components.forEach(function(component) {
        const badgeClass = component.status === 'active' ? 'badge-success' : 
                          component.status === 'warning' ? 'badge-warning' : 'badge-danger';
        
        const item = `
            <div class="list-group-item">
                <span class="badge ${badgeClass}">${component.status_text}</span>
                <i class="fa ${component.icon}"></i> ${component.name}
                <div class="small text-muted">${component.details}</div>
            </div>
        `;
        container.append(item);
    });
}

// Update alerts list
function updateAlertsList(alerts) {
    const container = $('#scaling-alerts');
    container.empty();
    
    alerts.forEach(function(alert) {
        const itemClass = alert.type === 'success' ? 'list-group-item-success' :
                         alert.type === 'warning' ? 'list-group-item-warning' :
                         alert.type === 'info' ? 'list-group-item-info' : 'list-group-item-danger';
        
        const item = `
            <div class="list-group-item ${itemClass}">
                <strong>${alert.title}</strong>
                <p class="small">${alert.message}</p>
                <small class="text-muted">${alert.time_ago}</small>
            </div>
        `;
        container.append(item);
    });
}

// Export infrastructure report
function exportInfrastructureReport() {
    window.open('index.php?route=extension/module/infrastructure_scaling_monitor/exportReport', '_blank');
}

// Run scaling simulation
function runScalingSimulation() {
    $.ajax({
        url: 'index.php?route=extension/module/infrastructure_scaling_monitor/runSimulation',
        type: 'POST',
        dataType: 'json',
        beforeSend: function() {
            $('button:contains("{{ text_run_simulation }}")').prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> {{ text_running }}');
        },
        success: function(data) {
            if (data.success) {
                alert('{{ text_simulation_success }}');
                updateCharts();
            } else {
                alert('{{ text_simulation_error }}');
            }
        },
        complete: function() {
            $('button:contains("{{ text_running }}")').prop('disabled', false).html('<i class="fa fa-play"></i> {{ text_run_simulation }}');
        }
    });
}

// Update autoscaling configuration
function updateAutoscalingConfig() {
    const config = {
        cpu_threshold: $('#cpu-threshold').val(),
        memory_threshold: $('#memory-threshold').val(),
        scale_out_instances: $('#scale-out-instances').val(),
        cooldown_period: $('#cooldown-period').val()
    };
    
    $.ajax({
        url: 'index.php?route=extension/module/infrastructure_scaling_monitor/updateConfig',
        type: 'POST',
        data: config,
        dataType: 'json',
        success: function(data) {
            if (data.success) {
                alert('{{ text_config_updated }}');
            } else {
                alert('{{ text_config_error }}');
            }
        }
    });
}

// Open Kubernetes dashboard
function openKubernetesDashboard() {
    window.open('/kubernetes-dashboard', '_blank');
}

// Load initial data
function loadInitialData() {
    updateMetrics();
    updateCharts();
    updateComponentStatus();
}

// Refresh functions
function refreshResourceChart() {
    updateCharts();
}

function refreshComponents() {
    updateComponentStatus();
}

// Cleanup on page unload
$(window).on('beforeunload', function() {
    if (updateInterval) {
        clearInterval(updateInterval);
    }
});
</script>

<style>
.huge {
    font-size: 32px;
    font-weight: bold;
}

.panel-heading .fa-5x {
    font-size: 3em;
}

.progress {
    margin-bottom: 0;
}

.badge-success {
    background-color: #5cb85c;
}

.badge-warning {
    background-color: #f0ad4e;
}

.badge-info {
    background-color: #5bc0de;
}

.badge-danger {
    background-color: #d9534f;
}

.list-group-item {
    border: 1px solid #ddd;
    margin-bottom: 2px;
}

.list-group-item:hover {
    background-color: #f5f5f5;
}

.text-center h3 {
    margin: 10px 0;
}

#resourceChart, #scalingPredictionChart {
    max-height: 300px;
}

.btn-group .dropdown-menu {
    min-width: 150px;
}

@media (max-width: 768px) {
    .huge {
        font-size: 24px;
    }
    
    .panel-heading .fa-5x {
        font-size: 2em;
    }
}
</style>

{{ footer }}