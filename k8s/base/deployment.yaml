# üöÄ MesChain-Sync Enterprise - Kubernetes Base Deployment
# Production-ready Kubernetes deployment configuration

apiVersion: apps/v1
kind: Deployment
metadata:
  name: meschain-sync-enterprise
  labels:
    app: meschain-sync-enterprise
    component: frontend
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: meschain-sync-enterprise
      component: frontend
  template:
    metadata:
      labels:
        app: meschain-sync-enterprise
        component: frontend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        
      # Service Account
      serviceAccountName: meschain-service-account
      
      # Anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - meschain-sync-enterprise
              topologyKey: kubernetes.io/hostname
      
      # Containers
      containers:
      - name: meschain-frontend
        image: ghcr.io/mestechsync/meschain-sync-enterprise:latest
        imagePullPolicy: Always
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        
        # Ports
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # Environment Variables
        env:
        - name: NODE_ENV
          value: "production"
        - name: REACT_APP_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['version']
        - name: REACT_APP_API_URL
          valueFrom:
            configMapKeyRef:
              name: meschain-config
              key: api-url
        - name: REACT_APP_WS_URL
          valueFrom:
            configMapKeyRef:
              name: meschain-config
              key: ws-url
        
        # Resource Limits
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        # Startup Probe
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 12
        
        # Volume Mounts
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-cache
          mountPath: /var/cache/nginx
        - name: var-log
          mountPath: /var/log/nginx
        - name: config
          mountPath: /etc/nginx/conf.d/app-config.conf
          subPath: app-config.conf
          readOnly: true
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-cache
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      - name: config
        configMap:
          name: meschain-nginx-config
          items:
          - key: app-config.conf
            path: app-config.conf
      
      # Termination Grace Period
      terminationGracePeriodSeconds: 30
      
      # DNS Policy
      dnsPolicy: ClusterFirst
      
      # Restart Policy
      restartPolicy: Always

---
# üîß Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: meschain-service-account
  labels:
    app: meschain-sync-enterprise
automountServiceAccountToken: false

---
# üåê Service
apiVersion: v1
kind: Service
metadata:
  name: meschain-sync-enterprise-service
  labels:
    app: meschain-sync-enterprise
    component: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app: meschain-sync-enterprise
    component: frontend

---
# üìã ConfigMap - Application Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: meschain-config
  labels:
    app: meschain-sync-enterprise
data:
  api-url: "https://api.meschain.com"
  ws-url: "wss://ws.meschain.com"
  environment: "production"
  log-level: "info"
  session-timeout: "3600"

---
# üîß ConfigMap - Nginx Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: meschain-nginx-config
  labels:
    app: meschain-sync-enterprise
data:
  app-config.conf: |
    # Additional application-specific nginx configuration
    location /api/health {
        return 200 "OK";
        access_log off;
    }
    
    location /metrics {
        stub_status on;
        access_log off;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }

---
# üîê Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: meschain-network-policy
  labels:
    app: meschain-sync-enterprise
spec:
  podSelector:
    matchLabels:
      app: meschain-sync-enterprise
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
    - protocol: UDP
      port: 53

---
# üìä Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: meschain-hpa
  labels:
    app: meschain-sync-enterprise
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: meschain-sync-enterprise
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60 