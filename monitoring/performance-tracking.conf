# MesChain-Sync Performance Monitoring Configuration
# MUSTI TEAM - DevOps/QA Excellence  
# ATOM-M002: Monitoring System Deployment

# Global Configuration
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'meschain-sync-monitor'
    team: 'musti-devops'

# Alerting Configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Rules Configuration
rule_files:
  - "meschain_alerts.yml"
  - "marketplace_alerts.yml"
  - "webhook_alerts.yml"

# Scrape Configurations
scrape_configs:
  
  # MesChain-Sync Application Monitoring
  - job_name: 'meschain-sync-app'
    scrape_interval: 10s
    static_configs:
      - targets: 
          - 'localhost:8080'
          - 'staging.meschain-sync.com:8080'
          - 'meschain-sync.com:8080'
    metrics_path: '/metrics'
    scrape_timeout: 5s
    
  # Marketplace API Monitoring
  - job_name: 'marketplace-apis'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'trendyol-api:8081'
          - 'amazon-api:8082' 
          - 'n11-api:8083'
          - 'ebay-api:8084'
          - 'hepsiburada-api:8085'
          - 'ozon-api:8086'
    metrics_path: '/api/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: marketplace
        regex: '([^-]+)-api:.*'
        replacement: '${1}'

  # Webhook System Monitoring  
  - job_name: 'webhook-systems'
    scrape_interval: 20s
    static_configs:
      - targets:
          - 'webhook-processor:8090'
    metrics_path: '/webhook/metrics'
    
  # Database Monitoring
  - job_name: 'meschain-database'
    scrape_interval: 30s
    static_configs:
      - targets:
          - 'mysql-exporter:9104'
    
  # System Monitoring
  - job_name: 'system-monitoring'
    scrape_interval: 15s
    static_configs:
      - targets:
          - 'node-exporter:9100'
    
  # OpenCart Specific Monitoring
  - job_name: 'opencart-metrics'
    scrape_interval: 25s
    static_configs:
      - targets:
          - 'opencart-exporter:9200'
    metrics_path: '/opencart/metrics'

# Custom Metrics Configuration
metric_relabel_configs:
  # MesChain-Sync Application Metrics
  - source_labels: [__name__]
    regex: 'meschain_(.+)'
    target_label: component
    replacement: 'meschain-sync'
    
  - source_labels: [__name__]
    regex: 'marketplace_(.+)'
    target_label: component  
    replacement: 'marketplace-api'
    
  - source_labels: [__name__]
    regex: 'webhook_(.+)'
    target_label: component
    replacement: 'webhook-system'

# Performance Tracking Rules
performance_rules:
  
  # API Response Time Tracking
  api_response_time:
    enabled: true
    thresholds:
      warning: 200ms
      critical: 500ms
    targets:
      - trendyol_api
      - amazon_api  
      - n11_api
      - ebay_api
      - hepsiburada_api
      - ozon_api
      
  # Webhook Processing Time
  webhook_processing_time:
    enabled: true
    thresholds:
      warning: 100ms
      critical: 300ms
    targets:
      - amazon_webhook
      - ebay_webhook
      - hepsiburada_webhook
      - n11_webhook
      - ozon_webhook
      - trendyol_webhook
      
  # Database Performance
  database_performance:
    enabled: true
    thresholds:
      query_time_warning: 50ms
      query_time_critical: 200ms
      connection_warning: 80%
      connection_critical: 95%
      
  # System Resource Monitoring
  system_resources:
    enabled: true
    thresholds:
      cpu_warning: 70%
      cpu_critical: 90%
      memory_warning: 80%
      memory_critical: 95%
      disk_warning: 80%
      disk_critical: 90%

# Dashboard Configuration
dashboards:
  
  # Main MesChain-Sync Dashboard
  main_dashboard:
    title: "MesChain-Sync - Main Dashboard"
    refresh: "5s"
    panels:
      - title: "API Response Times"
        type: "graph"
        targets:
          - expr: 'avg(meschain_api_response_time) by (marketplace)'
        thresholds:
          - value: 200
            color: "yellow"
          - value: 500
            color: "red"
            
      - title: "Webhook Success Rate"
        type: "stat"
        targets:
          - expr: 'rate(meschain_webhook_success_total[5m]) / rate(meschain_webhook_total[5m]) * 100'
        thresholds:
          - value: 95
            color: "green"
          - value: 90
            color: "yellow"
          - value: 80
            color: "red"
            
      - title: "Active Marketplace Connections"
        type: "stat"
        targets:
          - expr: 'sum(meschain_marketplace_connected)'
            
      - title: "Database Query Performance"
        type: "graph"
        targets:
          - expr: 'avg(mysql_query_duration_seconds) by (query_type)'
          
  # Marketplace Specific Dashboard
  marketplace_dashboard:
    title: "Marketplace API Performance"
    refresh: "10s"
    panels:
      - title: "Trendyol API Performance"
        type: "graph"
        targets:
          - expr: 'meschain_trendyol_api_response_time'
          - expr: 'meschain_trendyol_api_success_rate'
          
      - title: "Amazon API Performance" 
        type: "graph"
        targets:
          - expr: 'meschain_amazon_api_response_time'
          - expr: 'meschain_amazon_api_success_rate'
          
      - title: "N11 API Performance"
        type: "graph"  
        targets:
          - expr: 'meschain_n11_api_response_time'
          - expr: 'meschain_n11_api_success_rate'
          
  # Webhook Dashboard
  webhook_dashboard:
    title: "Webhook System Performance"
    refresh: "5s"
    panels:
      - title: "Webhook Processing Times"
        type: "heatmap"
        targets:
          - expr: 'meschain_webhook_processing_duration_seconds'
          
      - title: "Webhook Queue Length"
        type: "graph"
        targets:
          - expr: 'meschain_webhook_queue_length'
          
      - title: "Failed Webhooks"
        type: "table"
        targets:
          - expr: 'increase(meschain_webhook_failed_total[1h])'

# Alert Rules
alert_rules:
  
  # Critical Application Alerts
  - alert: MesChainSyncDown
    expr: up{job="meschain-sync-app"} == 0
    for: 1m
    labels:
      severity: critical
      team: musti
    annotations:
      summary: "MesChain-Sync application is down"
      description: "MesChain-Sync application has been down for more than 1 minute"
      
  - alert: HighAPIResponseTime
    expr: avg(meschain_api_response_time) > 500
    for: 2m
    labels:
      severity: warning
      team: musti
    annotations:
      summary: "High API response time detected"
      description: "API response time is {{ $value }}ms for {{ $labels.marketplace }}"
      
  # Marketplace Connectivity Alerts
  - alert: MarketplaceAPIDown
    expr: meschain_marketplace_connected == 0
    for: 3m
    labels:
      severity: critical
      team: musti
    annotations:
      summary: "Marketplace API connection lost"
      description: "{{ $labels.marketplace }} API is not responding"
      
  # Webhook System Alerts
  - alert: HighWebhookFailureRate
    expr: rate(meschain_webhook_failed_total[5m]) / rate(meschain_webhook_total[5m]) > 0.1
    for: 3m
    labels:
      severity: warning  
      team: musti
    annotations:
      summary: "High webhook failure rate"
      description: "Webhook failure rate is {{ $value | humanizePercentage }}"
      
  - alert: WebhookQueueBacklog
    expr: meschain_webhook_queue_length > 1000
    for: 5m
    labels:
      severity: warning
      team: musti
    annotations:
      summary: "Webhook queue backlog detected"
      description: "Webhook queue has {{ $value }} pending items"
      
  # Database Alerts
  - alert: DatabaseConnectionsHigh
    expr: mysql_connections_used / mysql_connections_max > 0.8
    for: 2m
    labels:
      severity: warning
      team: musti
    annotations:
      summary: "Database connections running high"
      description: "Database connection usage is {{ $value | humanizePercentage }}"
      
  - alert: SlowDatabaseQueries
    expr: avg(mysql_query_duration_seconds) > 0.2
    for: 5m
    labels:
      severity: warning
      team: musti
    annotations:
      summary: "Slow database queries detected"
      description: "Average query time is {{ $value }}s"

# Notification Channels
notification_channels:
  
  # Slack Integration
  slack:
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channels:
      critical: "#meschain-alerts-critical"  
      warning: "#meschain-alerts-warning"
      info: "#musti-team-monitoring"
    templates:
      critical: |
        üö® *CRITICAL ALERT* üö®
        *Alert:* {{ .GroupLabels.alertname }}
        *Description:* {{ .CommonAnnotations.description }}
        *Team:* @musti-team
        *Time:* {{ .CommonAnnotations.timestamp }}
        
      warning: |
        ‚ö†Ô∏è *Warning Alert* ‚ö†Ô∏è
        *Alert:* {{ .GroupLabels.alertname }}
        *Description:* {{ .CommonAnnotations.description }}
        *Team:* @musti-team
        
  # Email Notifications
  email:
    smtp_server: "smtp.mestech.com:587"
    from: "monitoring@mestech.com"
    to:
      - "musti-team@mestech.com"
      - "devops@mestech.com"
    templates:
      subject: "[MesChain-Sync] {{ .GroupLabels.alertname }}"
      body: |
        Alert: {{ .GroupLabels.alertname }}
        Severity: {{ .GroupLabels.severity }}
        Description: {{ .CommonAnnotations.description }}
        Time: {{ .CommonAnnotations.timestamp }}
        
        Team: MUSTI DevOps Team
        
  # PagerDuty Integration (for critical alerts)
  pagerduty:
    integration_key: "${PAGERDUTY_INTEGRATION_KEY}"
    severity_mapping:
      critical: "critical"
      warning: "warning"

# Retention and Storage
storage:
  retention: "30d"
  local_storage_path: "/var/lib/prometheus"
  remote_storage:
    url: "https://metrics.meschain-sync.com/api/v1/write"
    
# Log Configuration  
logging:
  level: "info"
  format: "json"
  output: "/var/log/meschain-monitoring.log"
  
# Health Check Configuration
health_checks:
  interval: "30s"
  timeout: "10s"
  endpoints:
    - name: "meschain-app"
      url: "http://localhost:8080/health"
    - name: "trendyol-api" 
      url: "http://trendyol-api:8081/health"
    - name: "amazon-api"
      url: "http://amazon-api:8082/health"
    - name: "webhook-processor"
      url: "http://webhook-processor:8090/health"

# Performance Benchmarks
benchmarks:
  api_response_targets:
    trendyol: 150ms
    amazon: 200ms
    n11: 180ms
    ebay: 250ms
    hepsiburada: 170ms
    ozon: 300ms
    
  webhook_processing_targets:
    amazon_webhook: 80ms
    ebay_webhook: 90ms
    hepsiburada_webhook: 75ms
    n11_webhook: 85ms
    ozon_webhook: 120ms
    trendyol_webhook: 70ms
    
  database_query_targets:
    select_queries: 20ms
    insert_queries: 50ms  
    update_queries: 40ms
    complex_queries: 100ms

# Security Monitoring
security:
  failed_login_threshold: 5
  suspicious_activity_patterns:
    - "multiple_failed_api_calls"
    - "unusual_webhook_patterns"
    - "high_frequency_requests"
  
# Backup and Recovery
backup:
  metrics_backup_interval: "1h"
  backup_retention: "7d"
  backup_location: "/backup/metrics" 